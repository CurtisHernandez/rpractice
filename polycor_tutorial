---
title: "efa_tutorial_polychor"
author: "Ellie"
date: "March 13, 2018"
output: html_document
---

Install everything you don't have...
```{r}
wants <- c("GPArotation", "mvtnorm", "polycor", "psych")
has <- wants %in% rownames(installed.packages())
if(any(!has)) install.packages(wants[!has])
```

...and library it all:
```{r}
library("GPArotation")
library("mvtnorm")
library("polycor")
library("psych")
```

Okay, here's simulated data.  200 observations.  6 variables.  2 orthogonal factors.
```{r}
N <- 200 #number of observations
P <- 6 #number of variables
Q <- 2 #number of factors

# true P x Q loading matrix -> variable-factor correlations
Lambda <- matrix(c(0.7,-0.4, 0.8,0, -0.2,0.9, -0.3,0.4, 0.3,0.7, -0.8,0.1),
                 nrow=P, ncol=Q, byrow=TRUE)
```
This just makes a 6x2 matrix that has the correlations of each variable with each factor. (Remember, you're reverse-engineering data here - this is what you'd have ended up with.)

Now to simulate the actual data:
```{r}
# factor scores (uncorrelated factors)
FF <- rmvnorm(N, mean=c(5, 15), sigma=diag(Q))

# matrix with iid, mean 0, normal errors
E <- rmvnorm(N, rep(0, P), diag(P))
X <- FF %*% t(Lambda) + E
dfX <- data.frame(X)
```

And now to make it categorical and ordinal instead of continuous:
```{r}
lOrd <- lapply(dfX, function(x) {
  cut(x, breaks=quantile(x), include.lowest=TRUE,
      ordered=TRUE, labels=LETTERS[1:4]) })

dfOrd <- data.frame(lOrd)
ordNum <- data.matrix(dfOrd)
```

Okay.  Now let's get that polychoric matrix.
```{r}
pc <- hetcor(dfOrd, ML=TRUE) #In the real thing I'll want to do false because not MVN
#pc2 <- hetcor(dfOrd, ML=FALSE) #Fortunately this is pretty close to pc
```

And run the factor analysis.
```{r}
faPC <- fa(r=pc$correlations, nfactors=2, n.obs=N, rotate="varimax")
faPC$loadings
```

Or...OR...just skip the polychoric correlation matrix generation part and do it with the raw data. (But you still had to do Ordnum above.)
```{r}
faPCdirect <- fa.poly(ordNum, nfactors=2, rotate="varimax")
faPCdirect$fa$loadings
```

Okay, now to figure out the number of factors, but for a polychoric thing:
```{r}
fap <- fa.parallel.poly(ordNum)
```
There's some kind of issue with this, though...it throws an error.


```{r}
vss(pc$correlations, n.obs=N, rotate="varimax")
```

